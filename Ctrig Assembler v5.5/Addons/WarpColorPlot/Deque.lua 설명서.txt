NDeque(PlayerID,Number,Size)
: NDeque를 생성하는 함수 (사용자 정의 덱 생성)
PlayerID : 생성 트리거의 체크 플레이어
Number : 생성할 큐의 변수 개수 (1~32 중 입력, 각각 SVA1~SVA32타입으로 생성함)
Size : 생성할 큐의 크기 (상수 입력)
리턴값 : 생성된 NDeque 데이터
※ NDeque에서 덱 오버플로우가 발생할 경우 오류 발생함 (NPush_front, NPush_pop, NPop_front, NPop_back 사용시 주의)

NPush_front(PlayerID,Deque,Source,Mask)
NPush_back(PlayerID,Deque,Source,Mask)
: NDeque에 값을 입력하는 함수 (각각 front, back에 추가)
PlayerID : 생성 트리거의 체크 플레이어
Deque : 값을 입력할 원형큐 (NDeque의 리턴값 입력)
Source : Deque에 입력할 값 (하나만 입력가능, Number = 1일 경우, 상수/V/VA/SV1/SVA1 입력,
Number = 2일 경우 상수/{상수/상수}/"상수"/W/WA/SV2/SVA2 입력,
Number = 3~32일 경우 SV/SVA 입력)
Mask : Source를 입력할때 사용할 비트마스크 (미입력시 0xFFFFFFFF로 입력됨,
Number = 1일 경우 상수, Number = 2~32일 경우 {상수1,상수2,…} 또는 상수(전체 적용) 입력)

NPop_front(PlayerID,Deque,Dest)
NPop_back(PlayerID,Deque,Dest)
: NDeque에서 값을 출력하는 함수 (각각 front, back에서 꺼냄)
PlayerID : 생성 트리거의 체크 플레이어
Deque : 값을 출력할 원형큐 (NDeque의 리턴값 입력)
Dest : Deque에서 값을 출력할 곳 (하나만 입력가능, Number = 1일 경우, 상수/V(A)/Mem/A/SV(A)1 입력,
Number = 2일 경우 상수/{상수,상수}/{상수,{상수}}/W(A)/LA/LMem/SV(A)2
Number = 3~32일 경우 SV/SVA 입력)

InitWarpQueue(PlayerID,Size,Delay,TempX,TempY,XSize,YSize,Xpx,Ypx)
: WarpQueue를 생성하는 함수 (NDeque 사용, WarpTexture 유닛 생성시 사용)
PlayerID : 생성 트리거의 체크 플레이어
Size : 생성할 큐의 크기 (상수 입력)
Delay : 생성할 WarpTexture 프레임 수 (1~18중 선택, 낮을수록 파랑+투명 ~ 높을수록 하양+불투명)
TempX, TempY : 각각 유닛보관소의 X축, Y축 좌표
XSize, YSize : 각각 유닛보관소의 저장가능한 가로, 세로 칸 수
Xpx, Ypx : 각각 유닛보관소에서의 유닛 배치 간격 (가로, 세로 길이)
리턴값 : 생성된 WarpQueue 데이터
※ WarpQueue에 들어온 유닛을 유닛보관소(위치:(TempX,TempY), 총 XSize*YSize칸)에 각각 가로로 Xpx, 세로로 Ypx만큼 간격을 둬서 출력될 때까지 저장함
※ WarpQueue에서 큐 오버플로우가 발생할 경우 오류 발생함 (Enqueue, Dequeue시 주의)

WarpEnqueue(PlayerID,WarpQ,X,Y,OrderX,OrderY,OrderID,PlotSize,Owner,UnitId,Location,Properties)
: WarpQueue에 값을 입력하는 함수 (유닛저장소 사용)
PlayerID : 생성 트리거의 체크 플레이어
WarpQ : 값을 입력할 WarpQueue 데이터
X, Y : 각각 유닛을 옮길 X,Y 좌표 (V입력(중간연산자X), 소환위치, WarpQ의 프레임 수에 도달하면 MoveUnit으로 옮겨짐)
OrderX, OrderY : 각각 유닛이 움직일 X,Y 좌표 (V입력(중간연산자X), 목표지점, 소환위치에 옮겨진 유닛이 Order로 직접 움직여서 도달할 좌표)
OrderID : 소환위치로 옮겨진 직후 유닛의 오더ID (숫자 : 0~255 입력, V : (0~255)*0x0100 입력)
PlotSize : 유닛보관소에 유닛 생성시 로케이션의 크기 설정
Owner : 생성할 유닛의 PlayerID (숫자/V)
UnitID : 생성할 유닛의 UnitID (숫자/V)
Location : 유닛 생성시 사용할 로케이션
Properties : 값 입력시 Createunitwithproperties 사용, nil 입력시 Createunit 사용함
※ Enqueue에서 유닛은 1.유닛보관소 → 2.소환위치(X,Y) → 3.목표지점(OrderX,OrderY)로 이동함


WarpEnqueueX(PlayerID,WarpQ,X,Y,OrderX,OrderY,OrderID,PlotSize,Owner,UnitId,Location,Properties)
: WarpQueue에 값을 입력하는 함수 (유닛저장소 미사용)
PlayerID : 생성 트리거의 체크 플레이어
WarpQ : 값을 입력할 WarpQueue 데이터
X, Y : 각각 유닛을 소환할 X,Y 좌표 (V입력(중간연산자X), 유닛을 생성할 위치 입력)
OrderX, OrderY : 각각 유닛이 움직일 X,Y 좌표 (V입력(중간연산자X), 목표지점, 소환위치에 생성된 유닛이 Order로 직접 움직여서 도달할 좌표)
OrderID : 소환위치에서 프레임 도달 직후 유닛의 오더ID (숫자 : 0~255 입력, V : (0~255)*0x0100 입력)
PlotSize : 유닛 생성시 로케이션의 크기 설정
Owner : 생성할 유닛의 PlayerID (숫자/V)
UnitID : 생성할 유닛의 UnitID (숫자/V)
Location : 유닛 생성시 사용할 로케이션
Properties : 값 입력시 Createunitwithproperties 사용, nil 입력시 Createunit 사용함
※ EnqueueX에서 유닛은 1.소환위치(X,Y) → 2.목표지점(OrderX,OrderY)로 이동함


WarpDequeue(PlayerID,WarpQ,PlotSize,Location1,Location2)
: WarpQueue에서 값을 출력하는 함수 (설치형, 코드에서 1회만 설치하면됨)
PlayerID : 생성 트리거의 체크 플레이어
WarpQ : 값을 출력할 WarpQueue 데이터
PlotSize : 유닛 이동시 사용할 로케이션의 크기 설정
Location1, Location2 : 각각 유닛 이동시 사용할 로케이션 (source(L1) -> dest(L2))
※ Dequeue에서 큐에 있는 원소중 탈출 프레임 수 도달한 것은 모두 빼내고, 비정상적인 원소는 모두 제거함